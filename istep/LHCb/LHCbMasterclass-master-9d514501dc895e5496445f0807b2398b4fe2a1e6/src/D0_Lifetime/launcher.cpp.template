#pragma warning(disable: 4244 4800 )
#ifndef ROOT_TGDockableFrame
#include "TGDockableFrame.h"
#endif
#ifndef ROOT_TGMenu
#include "TGMenu.h"
#endif
#ifndef ROOT_TGMdiDecorFrame
#include "TGMdiDecorFrame.h"
#endif
#ifndef ROOT_TG3DLine
#include "TG3DLine.h"
#endif
#ifndef ROOT_TGMdiFrame
#include "TGMdiFrame.h"
#endif
#ifndef ROOT_TGMdiMainFrame
#include "TGMdiMainFrame.h"
#endif
#ifndef ROOT_TGMdiMenu
#include "TGMdiMenu.h"
#endif
#ifndef ROOT_TGListBox
#include "TGListBox.h"
#endif

#ifndef ROOT_TGNumberEntry
#include "TGNumberEntry.h"
#endif
#ifndef ROOT_TGScrollBar
#include "TGScrollBar.h"
#endif
#ifndef ROOT_TGComboBox
#include "TGComboBox.h"
#endif
#ifndef ROOT_TGuiBldHintsEditor
#include "TGuiBldHintsEditor.h"
#endif
#ifndef ROOT_TGuiBldNameFrame
#include "TGuiBldNameFrame.h"
#endif
#ifndef ROOT_TGFrame
#include "TGFrame.h"
#endif
#ifndef ROOT_TGFileDialog
#include "TGFileDialog.h"
#endif
#ifndef ROOT_TGShutter
#include "TGShutter.h"
#endif
#ifndef ROOT_TGButtonGroup
#include "TGButtonGroup.h"
#endif
#ifndef ROOT_TGCanvas
#include "TGCanvas.h"
#endif
#ifndef ROOT_TGFSContainer
#include "TGFSContainer.h"
#endif
#ifndef ROOT_TGuiBldEditor
#include "TGuiBldEditor.h"
#endif
#ifndef ROOT_TGColorSelect
#include "TGColorSelect.h"
#endif
#ifndef ROOT_TGButton
#include "TGButton.h"
#endif
#ifndef ROOT_TGFSComboBox
#include "TGFSComboBox.h"
#endif
#ifndef ROOT_TGLabel
#include "TGLabel.h"
#endif
#ifndef ROOT_TRootGuiBuilder
#include "TRootGuiBuilder.h"
#endif
#ifndef ROOT_TGTab
#include "TGTab.h"
#endif
#ifndef ROOT_TGListView
#include "TGListView.h"
#endif
#ifndef ROOT_TGSplitter
#include "TGSplitter.h"
#endif
#ifndef ROOT_TGStatusBar
#include "TGStatusBar.h"
#endif
#ifndef ROOT_TGListTree
#include "TGListTree.h"
#endif
#ifndef ROOT_TGuiBldGeometryFrame
#include "TGuiBldGeometryFrame.h"
#endif
#ifndef ROOT_TGToolTip
#include "TGToolTip.h"
#endif
#ifndef ROOT_TGToolBar
#include "TGToolBar.h"
#endif
#ifndef ROOT_TGuiBldDragManager
#include "TGuiBldDragManager.h"
#endif
#include <TApplication.h>
#include <TEveManager.h>

#include "Riostream.h"
#include "LHCb_D0_Exercise.h"
#include <TSystem.h>
#include "launcher.h"
#include "Frame.h"
#include "TGMsgBox.h"


launcher::launcher()
{
	lang=0;
	start=0;
	pathSave1="";
	initialCheck();
	gui();
	disableAll();

}
void launcher::initialCheck()
{
	if(!gClient->GetPicture("Icons/l2.png"))
	{
		new TGMsgBox(gClient->GetRoot(), 0,  "Error", "Icons are missing!",0);
		start=1;
	}
	if(!gSystem->IsFileInIncludePath("share/LHCbMasterclass/lhcbfull.root"))
	{
		new TGMsgBox(gClient->GetRoot(), 0,  "Error", "The LHCb geometry is missing! You cannot continue with the exercise.",0);
		start=1;
	}
	if(!gSystem->IsFileInIncludePath("share/LHCbMasterclass/mclasseventv2_D0_1.root"))
	{
		new TGMsgBox(gClient->GetRoot(),0,"Error", "Particle tracks are missing! You cannot continue with the exercise.");
		start=1;
	}
}
//generated with TGuiBuilder
void launcher::gui()
{
	  // main frame
   fMainFrame990 = new TGMainFrame(gClient->GetRoot(),10,10,kMainFrame | kVerticalFrame);
   fMainFrame990->SetLayoutBroken(kTRUE);
  // fMainFrame990->SetCleanup(kDeepCleanup);
   // composite frame
   TGCompositeFrame *fMainFrame743 = new TGCompositeFrame(fMainFrame990,304,488,kVerticalFrame);
   fMainFrame743->SetLayoutBroken(kTRUE);

   // composite frame
   TGCompositeFrame *fCompositeFrame744 = new TGCompositeFrame(fMainFrame743,304,488,kVerticalFrame);
   fCompositeFrame744->SetLayoutBroken(kTRUE);
   
   // "Languages" group frame
   fGroupFrame745 = new TGGroupFrame(fCompositeFrame744,"Languages");
   fGroupFrame745->SetLayoutBroken(kTRUE);
   TGTextButton *fTextButton746 = new TGTextButton(fGroupFrame745,"EN");
   fTextButton746->Connect("Clicked()","launcher", this, "EN()");
   fTextButton746->SetTextJustify(36);
   fTextButton746->SetMargins(0,0,0,0);
   fTextButton746->SetWrapLength(-1);
   fTextButton746->Resize(40,24);
   fGroupFrame745->AddFrame(fTextButton746, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextButton746->MoveResize(8,24,40,24);
   TGTextButton *fTextButton747 = new TGTextButton(fGroupFrame745,"FR");
   fTextButton747->Connect("Clicked()","launcher", this, "FR()");
   fTextButton747->SetTextJustify(36);
   fTextButton747->SetMargins(0,0,0,0);
   fTextButton747->SetWrapLength(-1);
   fTextButton747->Resize(40,24);
   fGroupFrame745->AddFrame(fTextButton747, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextButton747->MoveResize(64,24,40,24);
   TGTextButton *fTextButton748 = new TGTextButton(fGroupFrame745,"DE");
   fTextButton748->Connect("Clicked()","launcher", this, "DE()");
   fTextButton748->SetTextJustify(36);
   fTextButton748->SetMargins(0,0,0,0);
   fTextButton748->SetWrapLength(-1);
   fTextButton748->Resize(40,24);
   fGroupFrame745->AddFrame(fTextButton748, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextButton748->MoveResize(120,24,40,24);
   TGTextButton *fTextButton749 = new TGTextButton(fGroupFrame745,"IT");
   fTextButton749->Connect("Clicked()","launcher", this, "IT()");
   fTextButton749->SetTextJustify(36);
   fTextButton749->SetMargins(0,0,0,0);
   fTextButton749->SetWrapLength(-1);
   fTextButton749->Resize(40,24);
   fGroupFrame745->AddFrame(fTextButton749, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextButton749->MoveResize(232,24,40,24);
   TGTextButton *fTextButton750 = new TGTextButton(fGroupFrame745,"RO");
   fTextButton750->Connect("Clicked()","launcher", this, "RO()");
   fTextButton750->SetTextJustify(36);
   fTextButton750->SetMargins(0,0,0,0);
   fTextButton750->SetWrapLength(-1);
   fTextButton750->Resize(40,24);
   fGroupFrame745->AddFrame(fTextButton750, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextButton750->MoveResize(176,24,40,24);

   fGroupFrame745->SetLayoutManager(new TGVerticalLayout(fGroupFrame745));
   fGroupFrame745->Resize(288,72);
   fCompositeFrame744->AddFrame(fGroupFrame745, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fGroupFrame745->MoveResize(8,8,288,72);

   // "Start" group frame
   fGroupFrame751 = new TGGroupFrame(fCompositeFrame744,"Enter your details");
   fGroupFrame751->SetLayoutBroken(kTRUE);

   TGFont *ufont;         // will reflect user font changes
   ufont = gClient->GetFont("-*-helvetica-medium-r-*-*-12-*-*-*-*-*-iso8859-1");

   TGGC   *uGC;           // will reflect user GC changes
   // graphics context changes
   GCValues_t valEntry752;
   valEntry752.fMask = kGCForeground | kGCBackground | kGCFillStyle | kGCFont | kGCGraphicsExposures;
   gClient->GetColorByName("#000000",valEntry752.fForeground);
   gClient->GetColorByName("#c0c0c0",valEntry752.fBackground);
   valEntry752.fFillStyle = kFillSolid;
   valEntry752.fFont = ufont->GetFontHandle();
   valEntry752.fGraphicsExposures = kFALSE;
   uGC = gClient->GetGC(&valEntry752, kTRUE);
   fTextEntry752 = new TGTextEntry(fGroupFrame751);
   fTextEntry752->Connect("TabPressed()", "launcher", this, "ChangeFocus()");
	   //fGroupFrame751, new TGTextBuffer(15),-1,uGC->GetGC(),ufont->GetFontStruct(),kSunkenFrame | kDoubleBorder | kOwnBackground);
   fTextEntry752->SetMaxLength(4096);
   fTextEntry752->SetAlignment(kTextLeft);
   fTextEntry752->SetText("");
   fTextEntry752->Resize(168,fTextEntry752->GetDefaultHeight());
   fGroupFrame751->AddFrame(fTextEntry752, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextEntry752->MoveResize(104,24,168,22);
   
   ufont = gClient->GetFont("-*-helvetica-medium-r-*-*-12-*-*-*-*-*-iso8859-1");

   // graphics context changes
   GCValues_t valEntry753;
   valEntry753.fMask = kGCForeground | kGCBackground | kGCFillStyle | kGCFont | kGCGraphicsExposures;
   gClient->GetColorByName("#000000",valEntry753.fForeground);
   gClient->GetColorByName("#c0c0c0",valEntry753.fBackground);
   valEntry753.fFillStyle = kFillSolid;
   valEntry753.fFont = ufont->GetFontHandle();
   valEntry753.fGraphicsExposures = kFALSE;
   uGC = gClient->GetGC(&valEntry753, kTRUE);
   fTextEntry753 = new TGTextEntry(fGroupFrame751);
   fTextEntry753->Connect("TabPressed()", "launcher", this, "ChangeFocus()");
	   //fGroupFrame751, new TGTextBuffer(15),-1,uGC->GetGC(),ufont->GetFontStruct(),kSunkenFrame | kDoubleBorder | kOwnBackground);
   fTextEntry753->SetMaxLength(4096);
   fTextEntry753->SetAlignment(kTextLeft);
   fTextEntry753->SetText("");
   fTextEntry753->Resize(168,fTextEntry753->GetDefaultHeight());
   fGroupFrame751->AddFrame(fTextEntry753, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextEntry753->MoveResize(104,48,168,22);
   
   ufont = gClient->GetFont("-*-helvetica-medium-r-*-*-12-*-*-*-*-*-iso8859-1");

   // graphics context changes
   GCValues_t valEntry754;
   valEntry754.fMask = kGCForeground | kGCBackground | kGCFillStyle | kGCFont | kGCGraphicsExposures;
   gClient->GetColorByName("#000000",valEntry754.fForeground);
   gClient->GetColorByName("#c0c0c0",valEntry754.fBackground);
   valEntry754.fFillStyle = kFillSolid;
   valEntry754.fFont = ufont->GetFontHandle();
   valEntry754.fGraphicsExposures = kFALSE;
   uGC = gClient->GetGC(&valEntry754, kTRUE);
   //printf("\n>>>>>>>>>>>>>>>>>>>>>>>: %s", gSystem->pwd());
   fTextEntry754 = new TGTextEntry(fGroupFrame751);
   fTextEntry754->Connect("TabPressed()", "launcher", this, "ChangeFocus()");
   fTextEntry754->SetMaxLength(4096);
   fTextEntry754->SetAlignment(kTextLeft);
   fTextEntry754->SetText("");
   fTextEntry754->Resize(168,fTextEntry754->GetDefaultHeight());
   fGroupFrame751->AddFrame(fTextEntry754, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextEntry754->MoveResize(104,72,168,22);
   fLabel755 = new TGLabel(fGroupFrame751,"Name");
   fLabel755->SetTextJustify(36);
   fLabel755->SetMargins(0,0,0,0);
   fLabel755->SetWrapLength(-1);
   fGroupFrame751->AddFrame(fLabel755, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fLabel755->MoveResize(8,24,72,18);
   fLabel756 = new TGLabel(fGroupFrame751,"Surname");
   fLabel756->SetTextJustify(36);
   fLabel756->SetMargins(0,0,0,0);
   fLabel756->SetWrapLength(-1);
   fGroupFrame751->AddFrame(fLabel756, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fLabel756->MoveResize(8,48,72,18);
   fLabel757 = new TGLabel(fGroupFrame751,"Grade");
   fLabel757->SetTextJustify(36);
   fLabel757->SetMargins(0,0,0,0);
   fLabel757->SetWrapLength(-1);
   fGroupFrame751->AddFrame(fLabel757, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fLabel757->MoveResize(8,72,72,18);
   fTextButton758 = new TGTextButton(fGroupFrame751,"Save");
   fTextButton758->Connect("Clicked()","launcher", this, "save()");
   fTextButton758->SetTextJustify(36);
   fTextButton758->SetMargins(0,0,0,0);
   fTextButton758->SetWrapLength(-1);
   fTextButton758->Resize(168,24);
   fGroupFrame751->AddFrame(fTextButton758, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextButton758->MoveResize(104,120,168,24);

   ULong_t ucolor;        // will reflect user color changes
   gClient->GetColorByName("#ffffff",ucolor);


   // combo box
   fComboBox759 = new TGComboBox(fGroupFrame751,-1,kHorizontalFrame | kSunkenFrame | kDoubleBorder | kOwnBackground);
   for(int i=1; i<=${NB_DATA_FILES}; i++) //${NB_DATA_FILES}
   {
	   TString nm1=Form("Combination %d",i);
		fComboBox759->AddEntry(nm1,i);
   }
   fComboBox759->Resize(168,22);
   fComboBox759->Select(-1);
   fGroupFrame751->AddFrame(fComboBox759, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fComboBox759->MoveResize(104,96,168,22);
   TGLabel *fLabel777 = new TGLabel(fGroupFrame751,"Number");
   fLabel777->SetTextJustify(36);
   fLabel777->SetMargins(0,0,0,0);
   fLabel777->SetWrapLength(-1);
   fGroupFrame751->AddFrame(fLabel777, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fLabel777->MoveResize(8,96,72,18);

   fGroupFrame751->SetLayoutManager(new TGVerticalLayout(fGroupFrame751));
   fGroupFrame751->Resize(288,168);
   fCompositeFrame744->AddFrame(fGroupFrame751, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fGroupFrame751->MoveResize(8,80,288,168);

   const char *l2_path, *l1_path;
   if(!gClient->GetPicture("Icons/l2.png")){
	   l2_path="mb_question_s.xpm";
	   l1_path="mb_question_s.xpm";
   }
   else {
	   l2_path="Icons/l2.png";
	   l1_path="Icons/l1.png";
   }

   // "I" group frame
   TGGroupFrame *fGroupFrame778 = new TGGroupFrame(fCompositeFrame744,"I");
   fGroupFrame778->SetLayoutBroken(kTRUE);
   fPictureButton779 = new TGPictureButton(fGroupFrame778,gClient->GetPicture(l2_path));
   fPictureButton779->Connect("Clicked()","launcher", this, "start1()");
   fGroupFrame778->AddFrame(fPictureButton779, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fPictureButton779->MoveResize(8,24,120,88);
   TGLabel *fLabel780 = new TGLabel(fGroupFrame778,"Event Display");
   fLabel780->SetTextJustify(36);
   fLabel780->SetMargins(0,0,0,0);
   fLabel780->SetWrapLength(-1);
   fGroupFrame778->AddFrame(fLabel780, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fLabel780->MoveResize(24,120,88,18);

   fGroupFrame778->SetLayoutManager(new TGVerticalLayout(fGroupFrame778));
   fGroupFrame778->Resize(136,160);
   fCompositeFrame744->AddFrame(fGroupFrame778, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));
   fGroupFrame778->MoveResize(8,248,136,160);
   
   // "Set output directory" group frame
   TGGroupFrame *fGroupFrame1061 = new TGGroupFrame(fCompositeFrame744,"Set output directory");
   fGroupFrame1061->SetLayoutBroken(kTRUE);
   TGTextButton *fTextButton1062 = new TGTextButton(fGroupFrame1061,"OK");
   fTextButton1062->Connect("Clicked()","launcher", this, "setOutputDir()");
   fTextButton1062->SetTextJustify(36);
   fTextButton1062->SetMargins(0,0,0,0);
   fTextButton1062->SetWrapLength(-1);
   fTextButton1062->Resize(56,24);
   fGroupFrame1061->AddFrame(fTextButton1062, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextButton1062->MoveResize(216,24,56,24);

   ufont = gClient->GetFont("-*-helvetica-medium-r-*-*-12-*-*-*-*-*-iso8859-1");

   // graphics context changes
   GCValues_t valEntry1141;
   valEntry1141.fMask = kGCForeground | kGCBackground | kGCFillStyle | kGCFont | kGCGraphicsExposures;
   gClient->GetColorByName("#000000",valEntry1141.fForeground);
   gClient->GetColorByName("#c0c0c0",valEntry1141.fBackground);
   valEntry1141.fFillStyle = kFillSolid;
   valEntry1141.fFont = ufont->GetFontHandle();
   valEntry1141.fGraphicsExposures = kFALSE;
   uGC = gClient->GetGC(&valEntry1141, kTRUE);
   fTextEntry1141 = new TGTextEntry(fGroupFrame1061, new TGTextBuffer(15),-1,uGC->GetGC(),ufont->GetFontStruct(),kSunkenFrame | kDoubleBorder | kOwnBackground);
   fTextEntry1141->SetMaxLength(4096);
   fTextEntry1141->SetAlignment(kTextLeft);
   fTextEntry1141->SetText("");
   fTextEntry1141->Resize(192,fTextEntry1141->GetDefaultHeight());
   fGroupFrame1061->AddFrame(fTextEntry1141, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextEntry1141->MoveResize(16,25,192,22);

   fGroupFrame1061->SetLayoutManager(new TGVerticalLayout(fGroupFrame1061));
   fGroupFrame1061->Resize(288,72);
   fCompositeFrame744->AddFrame(fGroupFrame1061, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fGroupFrame1061->MoveResize(8,408,288,72);
   
   // "Exit" group frame
   fGroupFrame781 = new TGGroupFrame(fCompositeFrame744,"Exit");
   fGroupFrame781->SetLayoutBroken(kTRUE);
   fTextButton782 = new TGTextButton(fGroupFrame781,"About");
   fTextButton782->Connect("Clicked()","launcher", this, "about()");
   fTextButton782->SetTextJustify(36);
   fTextButton782->SetMargins(0,0,0,0);
   fTextButton782->SetWrapLength(-1);
   fTextButton782->Resize(120,24);
   fGroupFrame781->AddFrame(fTextButton782, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextButton782->MoveResize(16,24,120,24); //MoveResize(104,24,80,24); //MoveResize(16,24,120,24);
   fTextButton783 = new TGTextButton(fGroupFrame781,"Exit");
   fTextButton783->Connect("Clicked()","launcher", this, "Exit()");
   fTextButton783->SetTextJustify(36);
   fTextButton783->SetMargins(0,0,0,0);
   fTextButton783->SetWrapLength(-1);
   fTextButton783->Resize(120,24);
   fGroupFrame781->AddFrame(fTextButton783, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fTextButton783->MoveResize(152,24,120,24); // MoveResize(192,24,80,24); //MoveResize(152,24,120,24);

   fGroupFrame781->SetLayoutManager(new TGVerticalLayout(fGroupFrame781));
   fGroupFrame781->Resize(288,70);
   fCompositeFrame744->AddFrame(fGroupFrame781, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fGroupFrame781->MoveResize(8,480,288,70);

   // "II" group frame
   TGGroupFrame *fGroupFrame784 = new TGGroupFrame(fCompositeFrame744,"II");
   fGroupFrame784->SetLayoutBroken(kTRUE);
   fPictureButton785 = new TGPictureButton(fGroupFrame784,gClient->GetPicture(l1_path));
   fPictureButton785->Connect("Clicked()","launcher", this, "start2()");
   fGroupFrame784->AddFrame(fPictureButton785, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fPictureButton785->MoveResize(8,24,120,88);
   TGLabel *fLabel786 = new TGLabel(fGroupFrame784,"D0 Exercise");
   fLabel786->SetTextJustify(36);
   fLabel786->SetMargins(0,0,0,0);
   fLabel786->SetWrapLength(-1);
   fGroupFrame784->AddFrame(fLabel786, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fLabel786->MoveResize(24,120,80,18);
   
   fGroupFrame784->SetLayoutManager(new TGVerticalLayout(fGroupFrame784));
   fGroupFrame784->Resize(136,160);
   fCompositeFrame744->AddFrame(fGroupFrame784, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fGroupFrame784->MoveResize(160,248,136,160);
   
   fMainFrame743->AddFrame(fCompositeFrame744, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
   fCompositeFrame744->MoveResize(0,0,304,552);

   fMainFrame990->AddFrame(fMainFrame743, new TGLayoutHints(kLHintsExpandX | kLHintsExpandY));
   fMainFrame743->MoveResize(0,0,304,552);

   fMainFrame990->SetMWMHints(kMWMDecorAll,
                        kMWMFuncAll,
                        kMWMInputModeless);
   fMainFrame990->MapSubwindows();

   fMainFrame990->Resize(fMainFrame990->GetDefaultSize());
   fMainFrame990->MapWindow();
   fMainFrame990->Resize(304,552); //Resize(304,488); //Resize(490,725);

}
void launcher:: ChangeFocus()
{
	if (gTQSender == fTextEntry752)
	fTextEntry753->SetFocus();

	if (gTQSender == fTextEntry753)
	fTextEntry754->SetFocus();

	if (gTQSender == fTextEntry754)
	fTextEntry1141->SetFocus();
}
void launcher:: save()
{
	/*
	Saves student's name, surname, grade and combination in string user
	*/
	if (strlen(fTextEntry752->GetText())<1 || strlen(fTextEntry753->GetText())<1 || strlen(fTextEntry754->GetText())<1 || fComboBox759->GetSelected()<1)
	{
		new TGMsgBox(gClient->GetRoot(), 0,  "Error", "Some fields are empty.",0);
	}
	else{
			user=Form("%s_%s_%s",fTextEntry752->GetText(),fTextEntry753->GetText(),fTextEntry754->GetText());
			enable2();
			h= fComboBox759->GetSelected();
			fTextButton758->SetEnabled(kFALSE);
	}
	
}
//start the first exercise
void launcher::start1()
{
	fPictureButton779->SetEnabled(kFALSE);
	Frame *f=new Frame(lang, user, pathSave1, h, this);
}
//start the second exercise
void launcher::start2()
{ 
	fPictureButton785->SetEnabled(kFALSE);
	LHCb_D0_Exercise(lang, pathSave1);
}
void launcher :: EN()
{	fLabel755->SetText("Name");
	fLabel756->SetText("Surname");
	fLabel757->SetText("Grade");
	fTextButton758->SetText("Save");

	fTextButton782->SetText("About");
	fTextButton783->SetText("Exit");
	//fTextButton869->SetText("Set output directory");
	fGroupFrame751->SetTitle("Enter your details");
	fGroupFrame745->SetTitle("Languages");
	lang = 1; enable1();}
void launcher :: IT()
{ 
	fLabel755->SetText("Nome");
	fLabel756->SetText("Cognome");
	fLabel757->SetText("Classe");
	fTextButton758->SetText("Salva");

	fTextButton782->SetText("Info");
	fTextButton783->SetText("Esci");
	//fTextButton869->SetText("Impostazioni");
	//fGroupFrame781->SetTitle("Esercizio");
	fGroupFrame751->SetTitle("Inserisci i tuoi dati");
	fGroupFrame745->SetTitle("Lingua");
	lang = 4; enable1();}
void launcher :: DE()
{ 
	fLabel755->SetText("Vorname");
	fLabel756->SetText("Nachname");
	fLabel757->SetText("Klasse");
	fTextButton758->SetText("Speichern");
	fTextButton782->SetText("Info");
	fTextButton783->SetText("Beenden");
	//fTextButton869->SetText("Einstellungen");
	//fGroupFrame781->SetTitle("Aufgabe");
	fGroupFrame751->SetTitle("Geben Sie Ihre Daten");
	fGroupFrame745->SetTitle("Sprache");
	lang = 3; enable1();
}
void launcher :: FR()
{ 
	fLabel755->SetText("Nom");
	fLabel756->SetText("Prenom");
	fLabel757->SetText("Classe");
	fTextButton758->SetText("Enregistrer l'exercice");

	fTextButton782->SetText("Infos");
	fTextButton783->SetText("Quitter");
	//fTextButton869->SetText("Parametres");
	//fGroupFrame781->SetTitle("Exercise");
	fGroupFrame751->SetTitle("Entrez vos coordonnees");
	fGroupFrame745->SetTitle("Langue");

	lang = 2; enable1();}
void launcher :: RO()
{ 
	fLabel755->SetText("Prenume");
	fLabel756->SetText("Nume");
	fLabel757->SetText("Clasa");
	fTextButton758->SetText("Salveaza");

	fTextButton782->SetText("Info");
	fTextButton783->SetText("Iesire");
	//fTextButton869->SetText("Setari");
	//fGroupFrame781->SetTitle("Exercitiu");
	fGroupFrame751->SetTitle("Introduceti detaliile");
	fGroupFrame745->SetTitle("Limbi");	
	lang = 5; enable1();
}
void launcher:: disableAll()
{
	fTextButton758->SetEnabled(kFALSE);
	fPictureButton785->SetEnabled(kFALSE);
	fPictureButton779->SetEnabled(kFALSE);
}
void launcher:: enable1()
{
	if(start==0)
	{
		fTextButton758->SetEnabled(kTRUE);
		start=1;
	}
}
void launcher:: enable2()
{
	fPictureButton779->SetEnabled(kTRUE);
}
void launcher :: enableII()
{
	fPictureButton785->SetEnabled(kTRUE);
	fPictureButton779->SetEnabled(kFALSE);
}
void launcher:: Exit()
{
	//gSystem->Exit(0);
	//gSystem->ExitLoop();
	//fMainFrame990->Cleanup();
	//delete fMainFrame990;
//	gEve->GetBrowser()->GetMainFrame()->CloseWindow();
 //	gApplication->Terminate(0);
	//gSystem->Abort();
	/*try{
		fMainFrame990->UnmapWindow();
//	gApplication->Terminate(0);
//	gEve->GetBrowser()->GetMainFrame()->CloseWindow();
	//gApplication->Terminate(0);*/
	fMainFrame990->UnmapWindow();
}
void launcher::about()
{
	new TGMsgBox(gClient->GetRoot(), 0,  "About", "CERN 2014",0);
}
//sets output dir for saving histograms
void launcher::setOutputDir()
{
	pathSave1=fTextEntry1141->GetText();
	if(strlen(pathSave1)<2) // || pathSave1.Contains(" "))
	{
		new TGMsgBox(gClient->GetRoot(), 0,  "Error", "The path isn't valid. Please try again.",0);
	}
	else 
	{
		if (!pathSave1.EndsWith("/")) 
		{pathSave1 += "/";}
	}
}
launcher::~launcher(void)
{
    // Cleanup();
}
